name: Continuous Deployment

on:
  push:
    tags:
      - "*-v*.*.*"

jobs:
  changelog:
    name: 📝 Generate changelog
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      brick_name: ${{ steps.extract.outputs.brick_name }}
      version: ${{ steps.extract.outputs.version }}
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - name: 📦 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract brick name and version
        id: extract
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          BRICK_NAME=${TAG_NAME%-v*}
          VERSION=${TAG_NAME#*-v}
          echo "brick_name=$BRICK_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: 📝 Generate changelog for brick
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: --verbose --unreleased --tag ${{ steps.extract.outputs.tag_name }}--prepend ${{ steps.extract.outputs.brick_name }}/CHANGELOG.md --include-path ${{ steps.extract.outputs.brick_name }}/**
          github_token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_REPO: ${{ github.repository }}

      - name: 💾 Commit and push changelog
        run: |
          git checkout main
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          set +e
          git add ${{ steps.extract.outputs.brick_name }}/CHANGELOG.md
          git commit -m "docs(${{ steps.extract.outputs.brick_name }}): update changelog for v${{ steps.extract.outputs.version }} [skip ci]"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git main

  # Обновление версии в brick.yaml
  update_version:
    name: 🔄 Update brick version
    runs-on: ubuntu-latest
    needs: changelog
    permissions:
      contents: write
    steps:
      - name: � Checkout
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: �🔄 Update brick.yaml version
        run: |
          cd ${{ needs.changelog.outputs.brick_name }}

          # Обновляем версию в brick.yaml
          if [ -f "brick.yaml" ]; then
            # Используем sed для замены версии
            sed -i.bak "s/^version: .*/version: ${{ needs.changelog.outputs.version }}/" brick.yaml
            rm brick.yaml.bak
            echo "✅ Updated version in brick.yaml to ${{ needs.changelog.outputs.version }}"
          else
            echo "⚠️ brick.yaml not found in ${{ needs.changelog.outputs.brick_name }}"
          fi

      - name: 💾 Commit and push version update
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          set +e
          git add ${{ needs.changelog.outputs.brick_name }}/brick.yaml
          git commit -m "chore(${{ needs.changelog.outputs.brick_name }}): bump version to v${{ needs.changelog.outputs.version }} [skip ci]"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git main

  # Небольшая задержка для синхронизации изменений
  sync:
    name: ⏳ Sync changes
    runs-on: ubuntu-latest
    needs: [changelog, update_version]
    steps:
      - name: ⏳ Wait for changes to propagate
        run: sleep 10

  publish:
    name: 🚀 Publish brick
    uses: egortabula/egortabula_workflows/.github/workflows/mason_publish.yml@v1
    needs: [changelog, update_version, sync]
    with:
      working_directory: ${{ needs.changelog.outputs.brick_name }}
    secrets:
      mason_credentials: ${{ secrets.MASON_CREDENTIALS }}

  release:
    name: 🎉 Create GitHub Release
    runs-on: ubuntu-latest
    needs: [changelog, update_version, sync, publish]
    permissions:
      contents: write
    steps:
      - name: 🏷️ Extract brick name and version
        id: extract
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          BRICK_NAME=${TAG_NAME%-v*}
          VERSION=${TAG_NAME#*-v}
          echo "brick_name=$BRICK_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: 🎉 Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract.outputs.tag_name }}
          release_name: "${{ steps.extract.outputs.brick_name }}-v${{ steps.extract.outputs.version }}"
          body: |
            # 🧱 ${{ steps.extract.outputs.brick_name }} v${{ steps.extract.outputs.version }}

            ## 📦 What's Changed
            ${{ needs.changelog.outputs.release_body }}

            ## 🚀 Installation
            ```bash
            mason add ${{ steps.extract.outputs.brick_name }}
            ```

            ## 📚 Documentation
            See the [README](${{ github.server_url }}/${{ github.repository }}/tree/${{ steps.extract.outputs.tag_name }}/${{ steps.extract.outputs.brick_name }}/README.md) for usage instructions.
          draft: false
          prerelease: false
